# vim: set filetype=sh:
# Basic functions

function update-ssh-known-hosts {
	echo "Updating ssh known hosts from deploy1001.eqiad.wmnet"
	scp deploy1001.eqiad.wmnet:/etc/ssh/ssh_known_hosts ~/.ssh/known_hosts-wmf
}

function sshaddall {
	ssh-add "$HOME"/.ssh/*id_rsa
}

# Run git with tracing
function gittrace {
	GIT_TRACE=1 git "$@"
}

function headpage {
	head -n $((LINES - 2))
}
function tailpage {
	tail -n $((LINES - 2))
}

function gerrit {
	host='gerrit.wikimedia.org'
	if [ "$1" == "openstack" ]; then
		host='review.openstack.org'
		shift
	fi;
	set -x
	# shellcheck disable=SC2029
	ssh -p 29418 hashar@$host 'gerrit' "${@:---help}"
	set +x
}

function telnets {
	openssl=$(which openssl)
	if [ -z "$openssl" ]; then
		echo "ERROR: openssl CLI not found." >&2
		return 1
	fi
	if [ -z "$1" ] || [ ! -z "$3" ]; then
		echo "Usage:"
		echo "    ${FUNCNAME[0]} host [port]"
		echo "    ${FUNCNAME[0]} host:port"
		return 1
	fi
	if [ -z "$2" ]; then
		# telnets host.example.org
		# telnets host.example.org:443
		"$openssl" s_client -connect "$1"
	else
		# telnets host.example.org 443
		"$openssl" s_client -connect "$1":"$2"
	fi
}

function fatalmonitor {
	host='mwlog1001.eqiad.wmnet'
	if [ "$HOSTNAME" = "$host" ]; then
		# In case I ever get ALIX on fluorine (tip: it is not on WMF prod)
		fatalmonitor "$@"
	else
		ssh -t -C mwlog1001.eqiad.wmnet 'fatalmonitor'
	fi
}

function 720x480 {
	osascript -e "tell application \"Terminal\" to set the bounds of the first window to {100, 50, 820, 530}"
}

function airport {
	 /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport "$@"
}

# Show up a pint of beer on Mac OS X :-D
# BEER MUG (U+1F37A) -- thanks Saper for the reference
function beer {
	echo 'üç∫ ';
}

function cigarette {
	echo 'üö¨';
}

# Similar as beer() but gives out three cookies
function cookies {
	echo 'üç™ üç™ üç™';
}

# American's loves them..
function donuts {
	echo 'üç©';
}

function bug {
	echo 'üêõ  <-- bug!';
}

function profit {
	echo "üí∂ üí∂ üí∂ ";  # banknote with euro sign
}

function jenkins {
	local cmd=$1
	local changeid=${2:-"I0cbfadb4363df19f3a3ff6819280e5ccbedc50b9"}
	shift

	echo "Using Change-Id: $changeid"
	case "$cmd" in
	"validate")
		# Create a dummy change for jenkins validation
		touch JENKINS jenkins.php jenkins.js jenkins.rb jenkins.pp jenkins.erb jenkins-testfile.py \
			&& echo '<?php' > jenkins.php \
			&& git add JENKINS jenkins.php jenkins.js jenkins.rb jenkins.pp jenkins.erb jenkins-testfile.py \
			&& git commit -m 'Jenkins job validation (DO NOT SUBMIT)' -m "Change-Id: $changeid" \
			&& git show \
			&& echo "Now send the change!   git-review -D"
		;;
	'help' | *)
		echo "Oh no"
		;;
	esac
}

function php-extension_dir {
	php -r 'print ini_get("extension_dir");'
}

function php-profile {
	php -d xdebug.profiler_enable=1 "$@"
}

function php-trace {
	php -d xdebug.auto_trace=1 "$@"
}

function php-trace-raw {
	php -d xdebug.auto_trace=1 -d xdebug.trace_format=1 "$@"
}

function php-vld {
	php -d "extension=vld.so" -d vld.active=1 -d vld.execute=0 -f "$1"
}

function ppv {
	puppet parser validate "$@"
}

function whichpackage {
	file="$(which "${@}")"
	dpkg --search "$file"
}
